apply plugin: 'application'

mainClassName = 'se.llbit.chunky.main.Chunky'
archivesBaseName = 'chunky-core'

dependencies {
  implementation 'it.unimi.dsi:fastutil:8.4.4'
  implementation 'org.apache.commons:commons-math3:3.2'
  implementation configurations.jsonlib
  implementation configurations.nbtlib
  implementation configurations.cplib
  implementation configurations.toolpanelib
  implementation project(':lib')

  testImplementation 'com.google.truth:truth:0.30'
  testImplementation 'junit:junit:4.12'
}

jar {
  // Include all dependencies in the Jar.
  from project(':lib').sourceSets.main.java.srcDirs
  from configurations.jsonlib.files.collect {
    zipTree(it)
  }
  from configurations.nbtlib.files.collect {
    zipTree(it)
  }
  from configurations.cplib.files.collect {
    zipTree(it)
  }
  from configurations.toolpanelib.files.collect {
    zipTree(it)
  }
  manifest {
    attributes('Main-Class': mainClassName)
  }
}

sourceSets {
  main {
    java {
      srcDir 'src/java'
    }
    resources {
      srcDir 'src/gen-res'
      srcDir 'src/res'
    }
  }
  test {
    java {
      srcDir 'src/test'
    }
  }
}

processResources.dependsOn 'updateVersionString'

task updateVersionString {
  description 'Store the current version string in src/gen-res/Version.properties'

  outputs.upToDateWhen {
    def props = new Properties()
    def output = file('src/gen-res/Version.properties')
    if (output.isFile()) {
      output.withInputStream { stream -> props.load(stream) }
    }
    props['version'] == project.version
  }

  doLast {
    file('src/gen-res').mkdirs()
    def date = new Date()
    def versionFile = file('src/gen-res/Version.properties')
    ant.propertyfile(file: versionFile) {
      entry(key: 'version', value: project.version)
    }
  }
}

task javadocJar(type: Jar) {
  from rootProject.docs
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}
